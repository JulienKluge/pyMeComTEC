(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     34304,        611]
NotebookOptionsPosition[     33539,        591]
NotebookOutlinePosition[     33937,        607]
CellTagsIndexPosition[     33894,        604]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Raw from API", "Section",ExpressionUUID->"16a3eaa9-dece-4ace-a1a8-a9cb7aab7204"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "mecomString", "=", 
   "\"\<#define MeCom_COM_DeviceType(Address, Fields, Cmd)                    \
  MeCom_ParValuel(Address, 100, 1, Fields, Cmd)\n#define \
MeCom_COM_HardwareVersion(Address, Fields, Cmd)                 \
MeCom_ParValuel(Address, 101, 1, Fields, Cmd)\n#define \
MeCom_COM_SerialNumber(Address, Fields, Cmd)                    \
MeCom_ParValuel(Address, 102, 1, Fields, Cmd)\n#define \
MeCom_COM_FirmwareVersion(Address, Fields, Cmd)                 \
MeCom_ParValuel(Address, 103, 1, Fields, Cmd)\n#define \
MeCom_COM_DeviceStatus(Address, Fields, Cmd)                    \
MeCom_ParValuel(Address, 104, 1, Fields, Cmd)\n#define \
MeCom_COM_ErrorNumber(Address, Fields, Cmd)                     \
MeCom_ParValuel(Address, 105, 1, Fields, Cmd)\n#define \
MeCom_COM_ErrorInstance(Address, Fields, Cmd)                   \
MeCom_ParValuel(Address, 106, 1, Fields, Cmd)\n#define \
MeCom_COM_ErrorParameter(Address, Fields, Cmd)                  \
MeCom_ParValuel(Address, 107, 1, Fields, Cmd)\n#define \
MeCom_COM_ParameterSystemFlashSaveOff(Address, Fields, Cmd)     \
MeCom_ParValuel(Address, 108, 1, Fields, Cmd)\n#define \
MeCom_COM_ParameterSystemFlashStatus(Address, Fields, Cmd)      \
MeCom_ParValuel(Address, 109, 1, Fields, Cmd)\n\n\
//**************************************************************************\n\
//**********Definition of all TEC Parameter Numbers*************************\n\
//**************************************************************************\n\
\n//Tab: Monitor Parameters\n#define MeCom_TEC_Mon_ObjectTemperature(Address, \
Inst, Value, Cmd)                  MeCom_ParValuef(Address, 1000, Inst, \
Value, Cmd)\n#define MeCom_TEC_Mon_SinkTemperature(Address, Inst, Value, Cmd) \
                   MeCom_ParValuef(Address, 1001, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_TargetObjectTemperature(Address, Inst, Value, Cmd)            \
MeCom_ParValuef(Address, 1010, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_RampNominalObjectTemperature(Address, Inst, Value, Cmd)       \
MeCom_ParValuef(Address, 1011, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_ThermalPowerModelCurrent(Address, Inst, Value, Cmd)           \
MeCom_ParValuef(Address, 1012, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_ActualOutputCurrent(Address, Inst, Value, Cmd)                \
MeCom_ParValuef(Address, 1020, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_ActualOutputVoltage(Address, Inst, Value, Cmd)                \
MeCom_ParValuef(Address, 1021, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_PIDLowerLimitation(Address, Inst, Value, Cmd)                 \
MeCom_ParValuef(Address, 1030, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_PIDUpperLimitation(Address, Inst, Value, Cmd)                 \
MeCom_ParValuef(Address, 1031, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_PIDControlVariable(Address, Inst, Value, Cmd)                 \
MeCom_ParValuef(Address, 1032, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_ObjectSensorRawADCValue(Address, Inst, Value, Cmd)            \
MeCom_ParValuel(Address, 1040, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_SinkSensorRawADCValue(Address, Inst, Value, Cmd)              \
MeCom_ParValuel(Address, 1041, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_ObjectSensorResistance(Address, Inst, Value, Cmd)             \
MeCom_ParValuef(Address, 1042, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_SinkSensorResitance(Address, Inst, Value, Cmd)                \
MeCom_ParValuef(Address, 1043, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_SinkSensorTemperature(Address, Inst, Value, Cmd)              \
MeCom_ParValuef(Address, 1044, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_FirmwareVersion(Address, Inst, Value, Cmd)                    \
MeCom_ParValuel(Address, 1050, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_FirmwareBuildNumber(Address, Inst, Value, Cmd)                \
MeCom_ParValuel(Address, 1051, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_HardwareVersion(Address, Inst, Value, Cmd)                    \
MeCom_ParValuel(Address, 1052, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_SerialNumber(Address, Inst, Value, Cmd)                       \
MeCom_ParValuel(Address, 1053, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_DriverInputVoltage(Address, Inst, Value, Cmd)                 \
MeCom_ParValuef(Address, 1060, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_MedVInternalSupply(Address, Inst, Value, Cmd)                 \
MeCom_ParValuef(Address, 1061, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_3_3VInternalSupply(Address, Inst, Value, Cmd)                 \
MeCom_ParValuef(Address, 1062, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_BasePlateTemperature(Address, Inst, Value, Cmd)               \
MeCom_ParValuef(Address, 1063, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_ErrorNumber(Address, Inst, Value, Cmd)                        \
MeCom_ParValuel(Address, 1070, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_ErrorInstance(Address, Inst, Value, Cmd)                      \
MeCom_ParValuel(Address, 1071, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_ErrorParameter(Address, Inst, Value, Cmd)                     \
MeCom_ParValuel(Address, 1072, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_ParallelActualOutputCurrent(Address, Inst, Value, Cmd)        \
MeCom_ParValuef(Address, 1090, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_DriverStatus(Address, Inst, Value, Cmd)                       \
MeCom_ParValuel(Address, 1080, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_ParameterSystemFlashStatus(Address, Inst, Value, Cmd)         \
MeCom_ParValuel(Address, 1081, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_FanRelativeCoolingPower(Address, Inst, Value, Cmd)            \
MeCom_ParValuef(Address, 1100, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_FanNominalFanSpeed(Address, Inst, Value, Cmd)                 \
MeCom_ParValuef(Address, 1101, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_FanActualFanSpeed(Address, Inst, Value, Cmd)                  \
MeCom_ParValuef(Address, 1102, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_FanActualPwmLevel(Address, Inst, Value, Cmd)                  \
MeCom_ParValuef(Address, 1103, Inst, Value, Cmd)\n#define \
MeCom_TEC_Mon_TemperatureIsStable(Address, Inst, Value, Cmd)                \
MeCom_ParValuel(Address, 1200, Inst, Value, Cmd)\n\n//Tab: Operation \
Parameters\n#define MeCom_TEC_Ope_OutputStageInputSelection(Address, Inst, \
Value, Cmd)          MeCom_ParValuel(Address, 2000, Inst, Value, Cmd)\n\
#define MeCom_TEC_Ope_OutputStageEnable(Address, Inst, Value, Cmd)            \
      MeCom_ParValuel(Address, 2010, Inst, Value, Cmd)\n#define \
MeCom_TEC_Ope_SetStaticCurrent(Address, Inst, Value, Cmd)                   \
MeCom_ParValuef(Address, 2020, Inst, Value, Cmd)\n#define \
MeCom_TEC_Ope_SetStaticVoltage(Address, Inst, Value, Cmd)                   \
MeCom_ParValuef(Address, 2021, Inst, Value, Cmd)\n#define \
MeCom_TEC_Ope_CurrentLimitation(Address, Inst, Value, Cmd)                  \
MeCom_ParValuef(Address, 2030, Inst, Value, Cmd)\n#define \
MeCom_TEC_Ope_VoltageLimitation(Address, Inst, Value, Cmd)                  \
MeCom_ParValuef(Address, 2031, Inst, Value, Cmd)\n#define \
MeCom_TEC_Ope_CurrentErrorThreshold(Address, Inst, Value, Cmd)              \
MeCom_ParValuef(Address, 2032, Inst, Value, Cmd)\n#define \
MeCom_TEC_Ope_VoltageErrorThreshold(Address, Inst, Value, Cmd)              \
MeCom_ParValuef(Address, 2033, Inst, Value, Cmd)\n#define \
MeCom_TEC_Ope_GeneralOperatingMode(Address, Inst, Value, Cmd)               \
MeCom_ParValuel(Address, 2040, Inst, Value, Cmd)\n#define \
MeCom_TEC_Ope_DeviceAddress(Address, Inst, Value, Cmd)                      \
MeCom_ParValuel(Address, 2051, Inst, Value, Cmd)\n#define \
MeCom_TEC_Ope_RS485CH1BaudRate(Address, Inst, Value, Cmd)                   \
MeCom_ParValuel(Address, 2050, Inst, Value, Cmd)\n#define \
MeCom_TEC_Ope_RS485CH1ResponseDelay(Address, Inst, Value, Cmd)              \
MeCom_ParValuel(Address, 2052, Inst, Value, Cmd)\n#define \
MeCom_TEC_Ope_ComWatchDogTimeout(Address, Inst, Value, Cmd)                 \
MeCom_ParValuef(Address, 2060, Inst, Value, Cmd)\n\n//Tab Temperature Control\
\n#define MeCom_TEC_Tem_TargetObjectTemp(Address, Inst, Value, Cmd)           \
        MeCom_ParValuef(Address, 3000, Inst, Value, Cmd)\n#define \
MeCom_TEC_Tem_CoarseTempRamp(Address, Inst, Value, Cmd)                     \
MeCom_ParValuef(Address, 3003, Inst, Value, Cmd)\n#define \
MeCom_TEC_Tem_ProximityWidth(Address, Inst, Value, Cmd)                     \
MeCom_ParValuef(Address, 3002, Inst, Value, Cmd)\n#define \
MeCom_TEC_Tem_Kp(Address, Inst, Value, Cmd)                                 \
MeCom_ParValuef(Address, 3010, Inst, Value, Cmd)\n#define \
MeCom_TEC_Tem_Ti(Address, Inst, Value, Cmd)                                 \
MeCom_ParValuef(Address, 3011, Inst, Value, Cmd)\n#define \
MeCom_TEC_Tem_Td(Address, Inst, Value, Cmd)                                 \
MeCom_ParValuef(Address, 3012, Inst, Value, Cmd)\n#define \
MeCom_TEC_Tem_DPartDampPT1(Address, Inst, Value, Cmd)                       \
MeCom_ParValuef(Address, 3013, Inst, Value, Cmd)\n#define \
MeCom_TEC_Tem_ModelizationMode(Address, Inst, Value, Cmd)                   \
MeCom_ParValuel(Address, 3020, Inst, Value, Cmd)\n#define \
MeCom_TEC_Tem_PeltierMaxCurrent(Address, Inst, Value, Cmd)                  \
MeCom_ParValuef(Address, 3030, Inst, Value, Cmd)\n#define \
MeCom_TEC_Tem_PeltierMaxVoltage(Address, Inst, Value, Cmd)                  \
MeCom_ParValuef(Address, 3031, Inst, Value, Cmd)\n#define \
MeCom_TEC_Tem_PeltierCoolingCapacity(Address, Inst, Value, Cmd)             \
MeCom_ParValuef(Address, 3032, Inst, Value, Cmd)\n#define \
MeCom_TEC_Tem_PeltierDeltaTemperature(Address, Inst, Value, Cmd)            \
MeCom_ParValuef(Address, 3033, Inst, Value, Cmd)\n#define \
MeCom_TEC_Tem_PeltierPositiveCurrentIs(Address, Inst, Value, Cmd)           \
MeCom_ParValuel(Address, 3034, Inst, Value, Cmd)\n#define \
MeCom_TEC_Tem_ResistorResistance(Address, Inst, Value, Cmd)                 \
MeCom_ParValuef(Address, 3040, Inst, Value, Cmd)\n#define \
MeCom_TEC_Tem_ResistorMaxCurrent(Address, Inst, Value, Cmd)                 \
MeCom_ParValuef(Address, 3041, Inst, Value, Cmd)\n\n//Tab Object Temperature\n\
#define MeCom_TEC_Obj_TemperatureOffset(Address, Inst, Value, Cmd)            \
      MeCom_ParValuef(Address, 4001, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_TemperatureGain(Address, Inst, Value, Cmd)                    \
MeCom_ParValuef(Address, 4002, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_LowerErrorThreshold(Address, Inst, Value, Cmd)                \
MeCom_ParValuef(Address, 4010, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_UpperErrorThreshold(Address, Inst, Value, Cmd)                \
MeCom_ParValuef(Address, 4011, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_MaxTempChange(Address, Inst, Value, Cmd)                      \
MeCom_ParValuef(Address, 4012, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_NTCLowerPointTemperature(Address, Inst, Value, Cmd)           \
MeCom_ParValuef(Address, 4020, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_NTCLowerPointResistance(Address, Inst, Value, Cmd)            \
MeCom_ParValuef(Address, 4021, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_NTCMiddlePointTemperature(Address, Inst, Value, Cmd)          \
MeCom_ParValuef(Address, 4022, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_NTCMiddlePointResistance(Address, Inst, Value, Cmd)           \
MeCom_ParValuef(Address, 4023, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_NTCUpperPointTemperature(Address, Inst, Value, Cmd)           \
MeCom_ParValuef(Address, 4024, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_NTCUpperPointResistance(Address, Inst, Value, Cmd)            \
MeCom_ParValuef(Address, 4025, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_StabilityTemperatureWindow(Address, Inst, Value, Cmd)         \
MeCom_ParValuef(Address, 4040, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_StabilityMinTimeInWindow(Address, Inst, Value, Cmd)           \
MeCom_ParValuef(Address, 4041, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_StabilityMaxStabiTime(Address, Inst, Value, Cmd)              \
MeCom_ParValuef(Address, 4042, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_MeasLowestResistance(Address, Inst, Value, Cmd)               \
MeCom_ParValuef(Address, 4030, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_MeasHighestResistance(Address, Inst, Value, Cmd)              \
MeCom_ParValuef(Address, 4031, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_MeasTempAtLowestResistance(Address, Inst, Value, Cmd)         \
MeCom_ParValuef(Address, 4032, Inst, Value, Cmd)\n#define \
MeCom_TEC_Obj_MeasTempAtHighestResistance(Address, Inst, Value, Cmd)        \
MeCom_ParValuef(Address, 4033, Inst, Value, Cmd)\n\n//Tab Sink Temperature\n\
#define MeCom_TEC_Sin_TemperatureOffset(Address, Inst, Value, Cmd)            \
      MeCom_ParValuef(Address, 5001, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_TemperatureGain(Address, Inst, Value, Cmd)                    \
MeCom_ParValuef(Address, 5002, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_LowerErrorThreshold(Address, Inst, Value, Cmd)                \
MeCom_ParValuef(Address, 5010, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_UpperErrorThreshold(Address, Inst, Value, Cmd)                \
MeCom_ParValuef(Address, 5011, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_MaxTempChange(Address, Inst, Value, Cmd)                      \
MeCom_ParValuef(Address, 5012, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_NTCLowerPointTemperature(Address, Inst, Value, Cmd)           \
MeCom_ParValuef(Address, 5020, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_NTCLowerPointResistance(Address, Inst, Value, Cmd)            \
MeCom_ParValuef(Address, 5021, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_NTCMiddlePointTemperature(Address, Inst, Value, Cmd)          \
MeCom_ParValuef(Address, 5022, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_NTCMiddlePointResistance(Address, Inst, Value, Cmd)           \
MeCom_ParValuef(Address, 5023, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_NTCUpperPointTemperature(Address, Inst, Value, Cmd)           \
MeCom_ParValuef(Address, 5024, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_NTCUpperPointResistance(Address, Inst, Value, Cmd)            \
MeCom_ParValuef(Address, 5025, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_SinkTemperatureSelection(Address, Inst, Value, Cmd)           \
MeCom_ParValuel(Address, 5030, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_FixedTemperature(Address, Inst, Value, Cmd)                   \
MeCom_ParValuef(Address, 5031, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_MeasLowestResistance(Address, Inst, Value, Cmd)               \
MeCom_ParValuef(Address, 5040, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_MeasHighestResistance(Address, Inst, Value, Cmd)              \
MeCom_ParValuef(Address, 5041, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_MeasTempAtLowestResistance(Address, Inst, Value, Cmd)         \
MeCom_ParValuef(Address, 5042, Inst, Value, Cmd)\n#define \
MeCom_TEC_Sin_MeasTempAtHighestResistance(Address, Inst, Value, Cmd)        \
MeCom_ParValuef(Address, 5043, Inst, Value, Cmd)\n\n//Tab Expert: Sub Tab \
Temperature Measurement\n#define MeCom_TEC_Exp_ObjMeasPGAGain(Address, Inst, \
Value, Cmd)                     MeCom_ParValuel(Address, 6000, Inst, Value, \
Cmd)\n#define MeCom_TEC_Exp_ObjMeasCurrentSource(Address, Inst, Value, Cmd)   \
            MeCom_ParValuel(Address, 6001, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_ObjMeasADCRs(Address, Inst, Value, Cmd)                       \
MeCom_ParValuef(Address, 6002, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_ObjMeasADCCalibOffset(Address, Inst, Value, Cmd)              \
MeCom_ParValuef(Address, 6003, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_ObjMeasADCCalibGain(Address, Inst, Value, Cmd)                \
MeCom_ParValuef(Address, 6004, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_ObjMeasSensorTypeSelection(Address, Inst, Value, Cmd)         \
MeCom_ParValuel(Address, 6005, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_SinMeasADCRv(Address, Inst, Value, Cmd)                       \
MeCom_ParValuef(Address, 6010, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_SinMeasADCVps(Address, Inst, Value, Cmd)                      \
MeCom_ParValuef(Address, 6013, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_SinMeasADCCalibOffset(Address, Inst, Value, Cmd)              \
MeCom_ParValuef(Address, 6011, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_SinMeasADCCalibGain(Address, Inst, Value, Cmd)                \
MeCom_ParValuef(Address, 6012, Inst, Value, Cmd)\n\n//Tab Expert: Sub Tab \
Display\n#define MeCom_TEC_Exp_DisplayType(Address, Inst, Value, Cmd)         \
               MeCom_ParValuel(Address, 6020, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_AlternativeMode(Address, Inst, Value, Cmd)                    \
MeCom_ParValuel(Address, 6023, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_DisplayLineDefText(Address, Inst, Value, Cmd)                 \
MeCom_ParValuel(Address, 6024, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_DisplayLineAltText(Address, Inst, Value, Cmd)                 \
MeCom_ParValuel(Address, 6025, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_DisplayLineAltMode(Address, Inst, Value, Cmd)                 \
MeCom_ParValuel(Address, 6026, Inst, Value, Cmd)\n\n//Tab Expert: Sub Tab PBC\
\n#define MeCom_TEC_Exp_PbcFunction(Address, Inst, Value, Cmd)                \
        MeCom_ParValuel(Address, 6100, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_ChangeButtonLowTemperature(Address, Inst, Value, Cmd)         \
MeCom_ParValuef(Address, 6110, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_ChangeButtonHighTemperature(Address, Inst, Value, Cmd)        \
MeCom_ParValuef(Address, 6111, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_ChangeButtonStepSize(Address, Inst, Value, Cmd)               \
MeCom_ParValuef(Address, 6112, Inst, Value, Cmd)\n\n//Tab Expert: Sub Tab FAN\
\n#define MeCom_TEC_Exp_FanControlEnable(Address, Inst, Value, Cmd)           \
        MeCom_ParValuel(Address, 6200, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_FanActualTempSource(Address, Inst, Value, Cmd)                \
MeCom_ParValuel(Address, 6210, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_FanTargetTemp(Address, Inst, Value, Cmd)                      \
MeCom_ParValuef(Address, 6211, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_FanTempKp(Address, Inst, Value, Cmd)                          \
MeCom_ParValuef(Address, 6212, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_FanTempTi(Address, Inst, Value, Cmd)                          \
MeCom_ParValuef(Address, 6213, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_FanTempTd(Address, Inst, Value, Cmd)                          \
MeCom_ParValuef(Address, 6214, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_FanSpeedMin(Address, Inst, Value, Cmd)                        \
MeCom_ParValuef(Address, 6220, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_FanSpeedMax(Address, Inst, Value, Cmd)                        \
MeCom_ParValuef(Address, 6221, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_FanSpeedKp(Address, Inst, Value, Cmd)                         \
MeCom_ParValuef(Address, 6222, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_FanSpeedTi(Address, Inst, Value, Cmd)                         \
MeCom_ParValuef(Address, 6223, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_FanSpeedTd(Address, Inst, Value, Cmd)                         \
MeCom_ParValuef(Address, 6224, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_FanSpeedBypass(Address, Inst, Value, Cmd)                     \
MeCom_ParValuel(Address, 6225, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_PwmFrequency(Address, Inst, Value, Cmd)                       \
MeCom_ParValuel(Address, 6230, Inst, Value, Cmd)\n\n//Tab Expert: Sub Tab \
Misc\n#define MeCom_TEC_Exp_MiscActObjectTempSource(Address, Inst, Value, \
Cmd)            MeCom_ParValuel(Address, 6300, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_MiscDelayTillReset(Address, Inst, Value, Cmd)                 \
MeCom_ParValuel(Address, 6310, Inst, Value, Cmd)\n#define \
MeCom_TEC_Exp_MiscError108Delay(Address, Inst, Value, Cmd)                  \
MeCom_ParValuel(Address, 6320, Inst, Value, Cmd)\n\n//Other Parameters (Not \
directly displayed in the Service Software)\n#define \
MeCom_TEC_Oth_LiveEnable(Address, Inst, Value, Cmd)                         \
MeCom_ParValuel(Address, 50000, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_LiveSetCurrent(Address, Inst, Value, Cmd)                     \
MeCom_ParValuef(Address, 50001, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_LiveSetVoltage(Address, Inst, Value, Cmd)                     \
MeCom_ParValuef(Address, 50002, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_SineRampStartPoint(Address, Inst, Value, Cmd)                 \
MeCom_ParValuel(Address, 50010, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_ObjectTargetTempSourceSelection(Address, Inst, Value, Cmd)    \
MeCom_ParValuel(Address, 50011, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_ObjectTargetTemperature(Address, Inst, Value, Cmd)            \
MeCom_ParValuef(Address, 50012, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmAutoTuningStart(Address, Inst, Value, Cmd)                 \
MeCom_ParValuel(Address, 51000, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmAutoTuningCancel(Address, Inst, Value, Cmd)                \
MeCom_ParValuel(Address, 51001, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmThermalModelSpeed(Address, Inst, Value, Cmd)               \
MeCom_ParValuel(Address, 51002, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmTuningParameter2A(Address, Inst, Value, Cmd)               \
MeCom_ParValuef(Address, 51010, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmTuningParameter2D(Address, Inst, Value, Cmd)               \
MeCom_ParValuef(Address, 51011, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmTuningParameterKu(Address, Inst, Value, Cmd)               \
MeCom_ParValuef(Address, 51012, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmTuningParameterTu(Address, Inst, Value, Cmd)               \
MeCom_ParValuef(Address, 51013, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmPIDParameterKp(Address, Inst, Value, Cmd)                  \
MeCom_ParValuef(Address, 51014, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmPIDParameterTi(Address, Inst, Value, Cmd)                  \
MeCom_ParValuef(Address, 51015, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmPIDParameterTd(Address, Inst, Value, Cmd)                  \
MeCom_ParValuef(Address, 51016, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmSlowPIParameterKp(Address, Inst, Value, Cmd)               \
MeCom_ParValuef(Address, 51022, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmSlowPIParameterTi(Address, Inst, Value, Cmd)               \
MeCom_ParValuef(Address, 51023, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmPIDDPartDamping(Address, Inst, Value, Cmd)                 \
MeCom_ParValuef(Address, 51024, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmCoarseTempRamp(Address, Inst, Value, Cmd)                  \
MeCom_ParValuef(Address, 51017, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmProximityWidth(Address, Inst, Value, Cmd)                  \
MeCom_ParValuef(Address, 51018, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmTuningStatus(Address, Inst, Value, Cmd)                    \
MeCom_ParValuel(Address, 51020, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_AtmTuningProgress(Address, Inst, Value, Cmd)                  \
MeCom_ParValuef(Address, 51021, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_LutTableStart(Address, Inst, Value, Cmd)                      \
MeCom_ParValuel(Address, 52000, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_LutTableStop(Address, Inst, Value, Cmd)                       \
MeCom_ParValuel(Address, 52001, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_LutTableStatus(Address, Inst, Value, Cmd)                     \
MeCom_ParValuel(Address, 52002, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_LutCurrentTableLine(Address, Inst, Value, Cmd)                \
MeCom_ParValuel(Address, 52003, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_LutTableIDSelection(Address, Inst, Value, Cmd)                \
MeCom_ParValuel(Address, 52010, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_LutNrOfRepetitions(Address, Inst, Value, Cmd)                 \
MeCom_ParValuel(Address, 52012, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_PbcEnableFunction(Address, Inst, Value, Cmd)                  \
MeCom_ParValuel(Address, 52100, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_PbcSetOutputToPushPull(Address, Inst, Value, Cmd)             \
MeCom_ParValuel(Address, 52101, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_PbcSetOutputStates(Address, Inst, Value, Cmd)                 \
MeCom_ParValuel(Address, 52102, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_PbcReadInputStates(Address, Inst, Value, Cmd)                 \
MeCom_ParValuel(Address, 52103, Inst, Value, Cmd)\n#define \
MeCom_TEC_Oth_ExternalActualObjectTemperature(Address, Inst, Value, Cmd)    \
MeCom_ParValuef(Address, 52200, Inst, Value, Cmd)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lines", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"StringSplit", "[", 
      RowBox[{"mecomString", ",", "\"\<\\n\>\""}], "]"}], ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "[", "#", "]"}], ">", "1"}], ",", 
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "\[Equal]", "\"\<#\>\""}], ",", 
        "False"}], "]"}], "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lines", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringTrim", "[", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<#define\>\"", "\[Rule]", "\"\<\>\""}], ",", 
          RowBox[{
           RowBox[{"Repeated", "[", "WhitespaceCharacter", "]"}], "\[Rule]", 
           "\"\< \>\""}], ",", 
          RowBox[{"\"\<MeCom_\>\"", "\[Rule]", "\"\<\>\""}], ",", 
          RowBox[{
          "\"\<(Address, Inst, Value, Cmd)\>\"", "\[Rule]", "\"\<\>\""}], ",", 
          RowBox[{"\"\<(Address, Value, Cmd)\>\"", "\[Rule]", "\"\<\>\""}], 
          ",", 
          RowBox[{"\"\<(Address, Fields, Cmd)\>\"", "\[Rule]", "\"\<\>\""}]}],
          "}"}]}], "]"}], "]"}], "&"}], "/@", "lines"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"comtec", ":", 
             RowBox[{"(", 
              RowBox[{"\"\<COM_\>\"", "|", "\"\<TEC_\>\""}], ")"}]}], "~~", 
            RowBox[{"RepeatedNull", "[", 
             RowBox[{
              RowBox[{"Repeated", "[", "WordCharacter", "]"}], "~~", 
              "\"\<_\>\""}], "]"}], "~~", 
            RowBox[{"(", 
             RowBox[{"name", ":", 
              RowBox[{"Repeated", "[", "WordCharacter", "]"}]}], ")"}], "~~", 
            RowBox[{"Repeated", "[", "WhitespaceCharacter", "]"}], "~~", 
            "\"\<ParValue\>\"", "~~", 
            RowBox[{"argType", ":", 
             RowBox[{"Repeated", "[", "WordCharacter", "]"}]}], "~~", 
            "\"\<(Address, \>\""}], ")"}], "~~", 
          RowBox[{"num", ":", 
           RowBox[{"Repeated", "[", "DigitCharacter", "]"}]}], "~~", 
          RowBox[{"Repeated", "[", 
           RowBox[{
           "WordCharacter", "|", "DigitCharacter", "|", "WhitespaceCharacter",
             "|", "\"\<,\>\"", "|", "\"\<)\>\""}], "]"}]}], "\[RuleDelayed]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"comtec", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", "name", ",", 
           "argType", ",", 
           RowBox[{"ToExpression", "@", "num"}]}], "}"}]}], "}"}]}], "]"}], 
     "&"}], "/@", "lines"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#1", ",", "#2", ",", "#3", ",", "#4", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#4", "<", "1999"}], "&&", 
            RowBox[{"#4", "\[NotEqual]", "108"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{"4030", "\[LessEqual]", "#4", "\[LessEqual]", "4036"}], 
           ")"}], "||", 
          RowBox[{"(", 
           RowBox[{"5040", "\[LessEqual]", "#4", "\[LessEqual]", "5043"}], 
           ")"}], "||", 
          RowBox[{"(", 
           RowBox[{"51010", "\[LessEqual]", "#4", "\[LessEqual]", "51024"}], 
           ")"}]}], ",", "True", ",", "False"}], "]"}]}], "}"}], "&"}], "@@@", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outString", "=", 
   RowBox[{"StringJoin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "\"\<{\\\"prefix\\\": \\\"\>\"", "<>", "#1", "<>", 
        "\"\<\\\", \\\"id\\\": \>\"", "<>", 
        RowBox[{"ToString", "[", "#4", "]"}], "<>", 
        "\"\<, \\\"name\\\": \\\"\>\"", "<>", "#2", "<>", 
        "\"\<\\\", \\\"type\\\": \>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"6024", "\[LessEqual]", "#4", "\[LessEqual]", "6026"}], 
          ",", "\"\<str\>\"", ",", 
          RowBox[{"Switch", "[", 
           RowBox[{
           "#3", ",", "\"\<l\>\"", ",", "\"\<int\>\"", ",", "\"\<f\>\"", ",", 
            "\"\<float\>\"", ",", "_", ",", "\"\<ERROR\>\""}], "]"}]}], "]"}],
         "<>", "\"\<, \\\"readonly\\\": \>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{"#5", ",", "\"\<True\>\"", ",", "\"\<False\>\""}], "]"}], 
        "<>", "\"\<},\\n\>\""}], ")"}], "&"}], "@@@", "data"}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"3f4aaa82-ab0a-461a-8854-d58d75eba4e0"],

Cell[BoxData[
 RowBox[{"CopyToClipboard", "@", "outString"}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"4e2f3387-728b-4ca0-9869-5fc4cc01de4f"],

Cell[BoxData[
 RowBox[{"CopyToClipboard", "[", 
  RowBox[{"StringJoin", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "<>", "\"\<,\\n\>\""}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{"#", ",", "InputForm"}], "]"}], "&"}], "/@", "data"}], 
     ")"}]}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[106]:=",ExpressionUUID->"bbfd64ec-f612-4472-8f48-99f09d7c2bf5"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "defineFunctions", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"defineFunctions", "[", 
   RowBox[{"{", 
    RowBox[{
    "prefix_", ",", "name_", ",", "argType_", ",", "meparid_", ",", 
     "readOnly_"}], "}"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "outStr", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"outStr", "=", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<def \>\"", "<>", "prefix", "<>", "\"\<_\>\"", "<>", "name", "<>", 
       "\"\<(self, channel = 1):\n\\treturn self.read_value(\>\"", "<>", 
       RowBox[{"ToString", "[", "meparid", "]"}], "<>", 
       "\"\<, MeParType.\>\"", "<>", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "argType", ",", "\"\<l\>\"", ",", "\"\<INT32\>\"", ",", "\"\<f\>\"", 
         ",", "\"\<FLOAT32\>\""}], "]"}], "<>", "\"\<, channel)\>\""}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "@", "readOnly"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"outStr", "=", 
         RowBox[{
         "outStr", "<>", "\"\<\\ndef Set_\>\"", "<>", "prefix", "<>", 
          "\"\<_\>\"", "<>", "name", "<>", 
          "\"\<(self, value, channel = 1, fire_and_forget = False):\n\
\\treturn self.write_value(\>\"", "<>", 
          RowBox[{"ToString", "[", "meparid", "]"}], "<>", 
          "\"\<, MeParType.\>\"", "<>", 
          RowBox[{"Switch", "[", 
           RowBox[{
           "argType", ",", "\"\<l\>\"", ",", "\"\<INT32\>\"", ",", 
            "\"\<f\>\"", ",", "\"\<FLOAT32\>\""}], "]"}], "<>", 
          "\"\<, value, channel, fire_and_forget)\>\""}]}], ";"}]}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "mepar_id", ",", "mepar_type", ",", "raw_value", ",", "channel", ",", 
        RowBox[{
         RowBox[{"fire_and", "_forget"}], "=", "False"}]}], "*)"}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "outStr"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"CopyToClipboard", "@", 
  RowBox[{"StringJoin", "[", 
   RowBox[{"Riffle", "[", 
    RowBox[{
     RowBox[{"defineFunctions", "/@", "data"}], ",", "\"\<\\n\\n\>\""}], 
    "]"}], "]"}]}]}], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"50f62b6e-9ed8-4e8f-90eb-4201a0710a67"]
}, Open  ]]
},
WindowSize->{1909, 1007},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"67950178-9424-480e-8874-326013edf05b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 86, 0, 67, "Section",ExpressionUUID->"16a3eaa9-dece-4ace-a1a8-a9cb7aab7204"],
Cell[669, 24, 29909, 489, 4099, "Input",ExpressionUUID->"3f4aaa82-ab0a-461a-8854-d58d75eba4e0"],
Cell[30581, 515, 149, 2, 28, "Input",ExpressionUUID->"4e2f3387-728b-4ca0-9869-5fc4cc01de4f"],
Cell[30733, 519, 431, 13, 28, "Input",ExpressionUUID->"bbfd64ec-f612-4472-8f48-99f09d7c2bf5"],
Cell[31167, 534, 2356, 54, 262, "Input",ExpressionUUID->"50f62b6e-9ed8-4e8f-90eb-4201a0710a67"]
}, Open  ]]
}
]
*)

